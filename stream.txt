#Stream
STREAM is the de facto industry standard benchmark
for measuring sustained memory bandwidth.

Documentation for STREAM is on the web at:
   http://www.cs.virginia.edu/stream/ref.html

Choice 1 [unrealible]
/hpcc-1.5.0/STREAM
ls
  - stream.c
  - onecpu.c
  
run by 
   mpicc -g -std=c99 -O stream.c -o stream
   
   debug :
      - link include for hpcc.h, hpccver.h
        be in hpcc-1.5.0/include
        
        link include for hpccmema.h 
        be in hpcc-1.5.0/hpl/include
        
        solve 
          add path like this
            #include <hpcc.h> --> #include <path-to-file/hpcc.h>
            
      - not know symbols in file .c
        solve 
           add flag -std=c99 in command
           
      - undefined reference to `MPI_Wtime' 
        slove 
           change 'gcc' -> 'mpicc'
          
      [unsolve] undefined reference to `HPCC_LocalVectorSize'
 
Choice 2
/home/bell/HPCC/hpcc-1.5.0/STREAM-master
source : git clone https://github.com/jeffhammond/STREAM.git
ls
    ISTORY.txt  LICENSE.txt  Makefile  mysecond.c README stream.c  stream.f
    
    run by 
    1. gcc -O stream.c -o stream
    2. gcc -c mysecond.c
    3. g77 -O stream.f mysecond.o -o stream
       use g77 --> gfortran if not have [one node]
    4. gcc -fopenmp -D_OPENMP stream.c -o stream 
       *cont. in [parallel part]
    5. export OMP_NUM_THREADS=2
    6. ./stream 
    
    debug :
       - run by [1] can't compile because not have time.h file
        slove
            add -D_BSD_SOURCE in command
                gcc -g -std=c99  -D_BSD_SOURCE -O -fopenmp stream.c -o stream_omp
       [unsolve] run by [2] can't compile because can't link to -D_OPENMP
    
    
Result file : Only output on screen not add new file
*have to log

-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 10000000 (elements), Offset = 0 (elements)
Memory per array = 76.3 MiB (= 0.1 GiB).
Total memory required = 228.9 MiB (= 0.2 GiB).
Each kernel will be executed 10 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
Number of Threads requested = 2
Number of Threads counted = 2
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 22887 microseconds.
   (= 22887 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           10156.2     0.015772     0.015754     0.015791
Scale:           9980.1     0.016099     0.016032     0.016125
Add:            14378.0     0.017095     0.016692     0.017167
Triad:          14586.1     0.017472     0.016454     0.017634
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------

